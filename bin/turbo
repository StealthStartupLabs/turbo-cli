#!/usr/bin/env ruby
# encoding: UTF-8

# resolve bin path, ignoring symlinks
require 'pathname'
bin_file = Pathname.new(__FILE__).realpath

# add self to libpath
$:.unshift File.expand_path('../../lib', bin_file)

STDOUT.sync = true

require 'clamp'
require 'turbo/cli/version_command'

class MainCommand < Clamp::Command

  subcommand "version", "Show version", Turbo::Cli::VersionCommand

  def execute
  end
end

begin
  MainCommand.run
rescue Excon::Errors::SocketError => exc
  if exc.message.include?('Unable to verify certificate')
    $stderr.puts "The server uses a certificate signed by an unknown authority.".colorize(:red)
    $stderr.puts "You can trust this server by copying server CA pem file to: #{"~/.kontena/certs/<hostname>.pem".colorize(:light_black)}"
    $stderr.puts "Protip: you can bypass the certificate check by setting #{'SSL_IGNORE_ERRORS=true'.colorize(:yellow)} env variable, but any data you send to the server could be intercepted by others."
    exit(1)
  else
    abort(exc.message)
  end
rescue => exc
  if ENV['DEBUG']
    raise exc
  else
    abort(exc.message)
  end
end